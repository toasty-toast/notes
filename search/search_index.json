{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home These pages are my general purpose notes. It is sourced from my Notes repository on Github and is built and deployed with MkDocs .","title":"Home"},{"location":"#home","text":"These pages are my general purpose notes. It is sourced from my Notes repository on Github and is built and deployed with MkDocs .","title":"Home"},{"location":"linux/networking/","text":"Networking Check if a Port is Open and Accessible If netstat is installed, you can use it to try and directly connect to the port. netstat <ip> <port> If netstat is not installed, and you can't install it due to permission issues, you can connecting to the port using bash directly. $ ( timeout 1 bash -c '</dev/tcp/<ip>/<port> && echo PORT OPEN || echo PORT CLOSED' ) 2 >/dev/null PORT OPEN $ ( timeout 1 bash -c '</dev/tcp/<ip>/<port> && echo PORT OPEN || echo PORT CLOSED' ) 2 >/dev/null PORT CLOSED","title":"Networking"},{"location":"linux/networking/#networking","text":"","title":"Networking"},{"location":"linux/networking/#check-if-a-port-is-open-and-accessible","text":"If netstat is installed, you can use it to try and directly connect to the port. netstat <ip> <port> If netstat is not installed, and you can't install it due to permission issues, you can connecting to the port using bash directly. $ ( timeout 1 bash -c '</dev/tcp/<ip>/<port> && echo PORT OPEN || echo PORT CLOSED' ) 2 >/dev/null PORT OPEN $ ( timeout 1 bash -c '</dev/tcp/<ip>/<port> && echo PORT OPEN || echo PORT CLOSED' ) 2 >/dev/null PORT CLOSED","title":"Check if a Port is Open and Accessible"},{"location":"productivity/blocking-sites/","text":"Blocking Sites Completely block access to distracting sites. On Windows Add the following to C:\\Windows\\System32\\drivers\\etc\\hosts . 127.0.0.1 bbc.co.uk www.bbc.co.uk reddit.com old.reddit.com twitter.com news.ycombinator.com guardian.co.uk theguardian.com guardian.com twitter.com api.twitter.com linkedin.com www.linkedin.com www.twitter.com www.macrumors.com macrumors.com","title":"Blocking Sites"},{"location":"productivity/blocking-sites/#blocking-sites","text":"Completely block access to distracting sites.","title":"Blocking Sites"},{"location":"productivity/blocking-sites/#on-windows","text":"Add the following to C:\\Windows\\System32\\drivers\\etc\\hosts . 127.0.0.1 bbc.co.uk www.bbc.co.uk reddit.com old.reddit.com twitter.com news.ycombinator.com guardian.co.uk theguardian.com guardian.com twitter.com api.twitter.com linkedin.com www.linkedin.com www.twitter.com www.macrumors.com macrumors.com","title":"On Windows"},{"location":"software/csharp/","text":"C# DistinctBy Extension Method The following code shows an extension method for IEnumerable<T> makes a collection distinct by a certain value. public static IEnumerable < TSource > DistinctBy < TSource , TResult >( this IEnumerable < TSource > enumerable , Func < TSource , TResult > selector ) { if ( enumerable == null ) { throw new ArgumentNullException ( nameof ( enumerable )); } if ( selector == null ) { throw new ArgumentNullException ( nameof ( selector )); } HashSet < TResult > set = new HashSet < TResult >(); foreach ( TSource item in enumerable ) { TResult value = selector ( item ); if ( set . Add ( value )) { yield return item ; } } } LINQ Visualization Image source Uninstall Program by Name /// <summary> /// Uninstalls the specified product. /// </summary> public static void UninstallProduct ( string productName ) { ProcessStartInfo uninstallProcessStart = new ProcessStartInfo { FileName = \"msiexec\" , Arguments = $ \"/x {GetProductCode(productName)} /quiet\" }; Process uninstallProcess = Process . Start ( uninstallProcessStart ); uninstallProcess ?. WaitForExit (); } /// <summary> /// Returns the product code of the specified product, or null if it is not installed. /// </summary> public static string GetProductCode ( string productName ) { foreach ( RegistryKey registryKey in EnumerateInstalledProducts ()) { if ( registryKey . GetValue ( \"DisplayName\" )?. ToString () == productName ) { return registryKey . Name . Split ( '\\\\' )?. LastOrDefault (); } } return null ; } /// <summary> /// Enumerates the <see cref=\"RegistryKey\"/> objects for all the installed products. /// </summary> public static IEnumerable < RegistryKey > EnumerateInstalledProducts () { using ( RegistryKey key = Registry . LocalMachine . OpenSubKey ( @\"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\" )) { if ( key != null ) { foreach ( string subKeyName in key . GetSubKeyNames ()) { using ( RegistryKey subKey = key . OpenSubKey ( subKeyName )) { if ( subKey != null ) { yield return subKey ; } } } } } using ( RegistryKey key = Registry . LocalMachine . OpenSubKey ( @\"SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\" )) { if ( key != null ) { foreach ( string subKeyName in key . GetSubKeyNames ()) { using ( RegistryKey subKey = key . OpenSubKey ( subKeyName )) { if ( subKey != null ) { yield return subKey ; } } } } } }","title":"C&#35;"},{"location":"software/csharp/#c","text":"","title":"C&#35;"},{"location":"software/csharp/#distinctby-extension-method","text":"The following code shows an extension method for IEnumerable<T> makes a collection distinct by a certain value. public static IEnumerable < TSource > DistinctBy < TSource , TResult >( this IEnumerable < TSource > enumerable , Func < TSource , TResult > selector ) { if ( enumerable == null ) { throw new ArgumentNullException ( nameof ( enumerable )); } if ( selector == null ) { throw new ArgumentNullException ( nameof ( selector )); } HashSet < TResult > set = new HashSet < TResult >(); foreach ( TSource item in enumerable ) { TResult value = selector ( item ); if ( set . Add ( value )) { yield return item ; } } }","title":"DistinctBy Extension Method"},{"location":"software/csharp/#linq-visualization","text":"Image source","title":"LINQ Visualization"},{"location":"software/csharp/#uninstall-program-by-name","text":"/// <summary> /// Uninstalls the specified product. /// </summary> public static void UninstallProduct ( string productName ) { ProcessStartInfo uninstallProcessStart = new ProcessStartInfo { FileName = \"msiexec\" , Arguments = $ \"/x {GetProductCode(productName)} /quiet\" }; Process uninstallProcess = Process . Start ( uninstallProcessStart ); uninstallProcess ?. WaitForExit (); } /// <summary> /// Returns the product code of the specified product, or null if it is not installed. /// </summary> public static string GetProductCode ( string productName ) { foreach ( RegistryKey registryKey in EnumerateInstalledProducts ()) { if ( registryKey . GetValue ( \"DisplayName\" )?. ToString () == productName ) { return registryKey . Name . Split ( '\\\\' )?. LastOrDefault (); } } return null ; } /// <summary> /// Enumerates the <see cref=\"RegistryKey\"/> objects for all the installed products. /// </summary> public static IEnumerable < RegistryKey > EnumerateInstalledProducts () { using ( RegistryKey key = Registry . LocalMachine . OpenSubKey ( @\"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\" )) { if ( key != null ) { foreach ( string subKeyName in key . GetSubKeyNames ()) { using ( RegistryKey subKey = key . OpenSubKey ( subKeyName )) { if ( subKey != null ) { yield return subKey ; } } } } } using ( RegistryKey key = Registry . LocalMachine . OpenSubKey ( @\"SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\" )) { if ( key != null ) { foreach ( string subKeyName in key . GetSubKeyNames ()) { using ( RegistryKey subKey = key . OpenSubKey ( subKeyName )) { if ( subKey != null ) { yield return subKey ; } } } } } }","title":"Uninstall Program by Name"},{"location":"software/docker/","text":"Docker Cleanup # Delete all containers (and volumes) $ docker rm -vf $( docker ps -aq ) # Delete all images $ docker rmi -f $( docker images -aq )","title":"Docker"},{"location":"software/docker/#docker","text":"","title":"Docker"},{"location":"software/docker/#cleanup","text":"# Delete all containers (and volumes) $ docker rm -vf $( docker ps -aq ) # Delete all images $ docker rmi -f $( docker images -aq )","title":"Cleanup"},{"location":"software/git/","text":"Git Tags # Create a tag $ git tag tag1 $ git tag tag2 # List tags $ git tag tag1 tag2 # Push tags $ git push --tags # Delete local tag $ git tag -d tag1 # Delete remote tag $ git push origin :tag1 Useful Aliases # In ~/.gitconfig [alias] branch-name = \"!git rev-parse --abbrev-ref HEAD\" publish = \"!git push -u origin $(git branch-name)\" unpublish = \"!git push origin :$(git branch-name)\" unstage = \"reset HEAD\"","title":"Git"},{"location":"software/git/#git","text":"","title":"Git"},{"location":"software/git/#tags","text":"# Create a tag $ git tag tag1 $ git tag tag2 # List tags $ git tag tag1 tag2 # Push tags $ git push --tags # Delete local tag $ git tag -d tag1 # Delete remote tag $ git push origin :tag1","title":"Tags"},{"location":"software/git/#useful-aliases","text":"# In ~/.gitconfig [alias] branch-name = \"!git rev-parse --abbrev-ref HEAD\" publish = \"!git push -u origin $(git branch-name)\" unpublish = \"!git push origin :$(git branch-name)\" unstage = \"reset HEAD\"","title":"Useful Aliases"},{"location":"software/markdown/","text":"Markdown Links Markdown Output [Google](https://www.google.com) Google","title":"Markdown"},{"location":"software/markdown/#markdown","text":"","title":"Markdown"},{"location":"software/markdown/#links","text":"Markdown Output [Google](https://www.google.com) Google","title":"Links"},{"location":"software/oracle-db/","text":"Oracle DB List a Table's Columns and Their Types SELECT COLUMN_NAME , DATA_TYPE , DATA_LENGTH FROM ALL_TAB_COLUMNS WHERE TABLE_NAME = '<table>' ORDER BY COLUMN_NAME","title":"Oracle DB"},{"location":"software/oracle-db/#oracle-db","text":"","title":"Oracle DB"},{"location":"software/oracle-db/#list-a-tables-columns-and-their-types","text":"SELECT COLUMN_NAME , DATA_TYPE , DATA_LENGTH FROM ALL_TAB_COLUMNS WHERE TABLE_NAME = '<table>' ORDER BY COLUMN_NAME","title":"List a Table's Columns and Their Types"},{"location":"software/python/","text":"Python Virtual Environment # install virtualenv $ pip install --upgrade pip $ pip install --user virtualenv # Create a new virtual environment $ python -m venv env # Activate the virtual environment $ source env/Scripts/activate # Deactivate the virtual environment $ deactivate # Save installed packages to requirements.txt $ pip freeze > requirements.txt # Install packages from requirements.txt $ pip install -r requirements.txt","title":"Python"},{"location":"software/python/#python","text":"","title":"Python"},{"location":"software/python/#virtual-environment","text":"# install virtualenv $ pip install --upgrade pip $ pip install --user virtualenv # Create a new virtual environment $ python -m venv env # Activate the virtual environment $ source env/Scripts/activate # Deactivate the virtual environment $ deactivate # Save installed packages to requirements.txt $ pip freeze > requirements.txt # Install packages from requirements.txt $ pip install -r requirements.txt","title":"Virtual Environment"},{"location":"software/sql-server/","text":"SQL Server Check If Column Exists IF EXISTS ( SELECT 1 FROM sys . columns WHERE name = 'column' AND object_id = OBJECT_ID ( 'schema.table' )) BEGIN -- The column exists END Check If Index Exists IF EXISTS ( SELECT 1 FROM sys . indexes WHERE name = 'index_name' AND object_id = OBJECT_ID ( 'table_name' )) BEGIN -- The index exists END Check If Procedure Exists IF EXISTS ( SELECT 1 FROM sysobjects WHERE id = object_id ( N 'schema.proc' ) AND OBJECTPROPERTY ( id , N 'IsProcedure' ) = 1 ) BEGIN -- The procedure exists END Check If Table Exists IF EXISTS ( SELECT 1 FROM INFORMATION_SCHEMA . TABLES WHERE TABLE_SCHEMA = 'schema' AND TABLE_NAME = 'table' ) BEGIN -- The table exists END Create Procedure CREATE PROCEDURE [ schema ].[ procedure ] @ arg INT , @ argWithDefault VARCHAR ( 10 ) = NULL AS BEGIN -- Procedure body END DATETIME CONVERT() Styles Without century With century Input/Output Standard 0 100 mon dd yyyy hh:miAM/PM Default 1 101 mm/dd/yyyy US 2 102 yyyy.mm.dd ANSI 3 103 dd/mm/yyyy British/French 4 104 dd.mm.yyyy German 5 105 dd-mm-yyyy Italian 6 106 dd mon yyyy - 7 107 Mon dd, yyyy - 8 108 hh:mm:ss - 9 109 mon dd yyyy hh:mi:ss:mmmAM (or PM) Default + millisec 10 110 mm-dd-yyyy USA 11 111 yyyy/mm/dd Japan 12 112 yyyymmdd ISO 13 113 dd mon yyyy hh:mi:ss:mmm Europe (24 hour clock)> 14 114 hh:mi:ss:mmm 24 hour clock 20 120 yyyy-mm-dd hh:mi:ss ODBC canonical (24 hour clock) 21 121 yyyy-mm-dd hh:mi:ss.mmm ODBC canonical (24 hour clock) 126 yyyy-mm-ddThh:mi:ss.mmm ISO8601 127 yyyy-mm-ddThh:mi:ss.mmmZ ISO8601 (with time zone Z) 130 dd mon yyyy hh:mi:ss:mmmAM Hijiri 131 dd/mm/yy hh:mi:ss:mmmAM Hijiri Get All Database Triggers SELECT TAB . name as TableName , TRIG . name as TriggerName , TRIG . is_disabled AS IsDisabled FROM sys . triggers AS TRIG INNER JOIN sys . tables AS TAB ON TRIG . parent_id = TAB . object_id Insert or Update Row Using MERGE MERGE table_name AS target USING ( SELECT @ var1 , @ var2 , @ var3 ) AS source ( col1 , col2 , col3 ) ON ( target . col1 = source . col1 ) -- Conditions comparing \"target\" and \"source\" WHEN MATCHED THEN UPDATE SET target . col1 = source . col1 -- Update \"target\" from \"source\" WHEN NOT MATCHED BY TARGET THEN INSERT ( col1 , col2 , col3 ) VALUES ( source . col1 , source . col2 , source . col3 ) -- Insert new row from \"source\" SET NOCOUNT ON SET NOCOUNT ON prevents the message from showing which contains the number of affected rows. Using this in a stored procedure can significantly improve its performance.","title":"SQL Server"},{"location":"software/sql-server/#sql-server","text":"","title":"SQL Server"},{"location":"software/sql-server/#check-if-column-exists","text":"IF EXISTS ( SELECT 1 FROM sys . columns WHERE name = 'column' AND object_id = OBJECT_ID ( 'schema.table' )) BEGIN -- The column exists END","title":"Check If Column Exists"},{"location":"software/sql-server/#check-if-index-exists","text":"IF EXISTS ( SELECT 1 FROM sys . indexes WHERE name = 'index_name' AND object_id = OBJECT_ID ( 'table_name' )) BEGIN -- The index exists END","title":"Check If Index Exists"},{"location":"software/sql-server/#check-if-procedure-exists","text":"IF EXISTS ( SELECT 1 FROM sysobjects WHERE id = object_id ( N 'schema.proc' ) AND OBJECTPROPERTY ( id , N 'IsProcedure' ) = 1 ) BEGIN -- The procedure exists END","title":"Check If Procedure Exists"},{"location":"software/sql-server/#check-if-table-exists","text":"IF EXISTS ( SELECT 1 FROM INFORMATION_SCHEMA . TABLES WHERE TABLE_SCHEMA = 'schema' AND TABLE_NAME = 'table' ) BEGIN -- The table exists END","title":"Check If Table Exists"},{"location":"software/sql-server/#create-procedure","text":"CREATE PROCEDURE [ schema ].[ procedure ] @ arg INT , @ argWithDefault VARCHAR ( 10 ) = NULL AS BEGIN -- Procedure body END","title":"Create Procedure"},{"location":"software/sql-server/#datetime-convert-styles","text":"Without century With century Input/Output Standard 0 100 mon dd yyyy hh:miAM/PM Default 1 101 mm/dd/yyyy US 2 102 yyyy.mm.dd ANSI 3 103 dd/mm/yyyy British/French 4 104 dd.mm.yyyy German 5 105 dd-mm-yyyy Italian 6 106 dd mon yyyy - 7 107 Mon dd, yyyy - 8 108 hh:mm:ss - 9 109 mon dd yyyy hh:mi:ss:mmmAM (or PM) Default + millisec 10 110 mm-dd-yyyy USA 11 111 yyyy/mm/dd Japan 12 112 yyyymmdd ISO 13 113 dd mon yyyy hh:mi:ss:mmm Europe (24 hour clock)> 14 114 hh:mi:ss:mmm 24 hour clock 20 120 yyyy-mm-dd hh:mi:ss ODBC canonical (24 hour clock) 21 121 yyyy-mm-dd hh:mi:ss.mmm ODBC canonical (24 hour clock) 126 yyyy-mm-ddThh:mi:ss.mmm ISO8601 127 yyyy-mm-ddThh:mi:ss.mmmZ ISO8601 (with time zone Z) 130 dd mon yyyy hh:mi:ss:mmmAM Hijiri 131 dd/mm/yy hh:mi:ss:mmmAM Hijiri","title":"DATETIME CONVERT() Styles"},{"location":"software/sql-server/#get-all-database-triggers","text":"SELECT TAB . name as TableName , TRIG . name as TriggerName , TRIG . is_disabled AS IsDisabled FROM sys . triggers AS TRIG INNER JOIN sys . tables AS TAB ON TRIG . parent_id = TAB . object_id","title":"Get All Database Triggers"},{"location":"software/sql-server/#insert-or-update-row-using-merge","text":"MERGE table_name AS target USING ( SELECT @ var1 , @ var2 , @ var3 ) AS source ( col1 , col2 , col3 ) ON ( target . col1 = source . col1 ) -- Conditions comparing \"target\" and \"source\" WHEN MATCHED THEN UPDATE SET target . col1 = source . col1 -- Update \"target\" from \"source\" WHEN NOT MATCHED BY TARGET THEN INSERT ( col1 , col2 , col3 ) VALUES ( source . col1 , source . col2 , source . col3 ) -- Insert new row from \"source\"","title":"Insert or Update Row Using MERGE"},{"location":"software/sql-server/#set-nocount-on","text":"SET NOCOUNT ON prevents the message from showing which contains the number of affected rows. Using this in a stored procedure can significantly improve its performance.","title":"SET NOCOUNT ON"},{"location":"software/windows/","text":"Windows Run a Program at Startup Open the Startup folder. Press Windows + R to open Run. Type shell:startup. Add a shortcut to the program to the Startup folder.","title":"Windows"},{"location":"software/windows/#windows","text":"","title":"Windows"},{"location":"software/windows/#run-a-program-at-startup","text":"Open the Startup folder. Press Windows + R to open Run. Type shell:startup. Add a shortcut to the program to the Startup folder.","title":"Run a Program at Startup"},{"location":"software/wpf/","text":"WPF Filtering a Collection Without Modifying It private ObservableCollection < string > myBackingCollection = new ObservableCollection < string >(); public ICollectionView MyCollectionView { get { ICollectionView view = CollectionViewSource . GetDefaultView ( this . myBackingColleciton ); view . Filter = ( obj ) => true ; // Filter delegate return view ; } } Remove Toolbar Grip and Overflow XAML <ToolBarPanel DockPanel.Dock= \"Top\" > <ToolBar ToolBarTray.IsLocked= \"True\" Loaded= \"ToolBar_Loaded\" > <Menu ToolBar.OverflowMode= \"Never\" > <!-- Menu items --> </Menu> </ToolBar> </ToolBarPanel> Code behind private void ToolBar_Loaded ( object sender , RoutedEventArgs e ) { ToolBar toolBar = sender as ToolBar ; var overflowGrid = toolBar . Template . FindName ( \"OverflowGrid\" , toolBar ) as FrameworkElement ; if ( overflowGrid != null ) { overflowGrid . Visibility = Visibility . Collapsed ; } var mainPanelBorder = toolBar . Template . FindName ( \"MainPanelBorder\" , toolBar ) as FrameworkElement ; if ( mainPanelBorder != null ) { mainPanelBorder . Margin = new Thickness (); } } Span All Grid Rows and Columns The following code shows how to make a control span all rows and/or columns of its parent grid, even if the number of rows and columns change. <Grid> <!-- Other stuff in the grid --> <ContentControl Grid.RowSpan= \"{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=RowDefinitions.Count, Mode=OneWay}\" Grid.ColumnSpan= \"{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ColumnDefinitions.Count, Mode=OneWay}\" /> </Grid>","title":"WPF"},{"location":"software/wpf/#wpf","text":"","title":"WPF"},{"location":"software/wpf/#filtering-a-collection-without-modifying-it","text":"private ObservableCollection < string > myBackingCollection = new ObservableCollection < string >(); public ICollectionView MyCollectionView { get { ICollectionView view = CollectionViewSource . GetDefaultView ( this . myBackingColleciton ); view . Filter = ( obj ) => true ; // Filter delegate return view ; } }","title":"Filtering a Collection Without Modifying It"},{"location":"software/wpf/#remove-toolbar-grip-and-overflow","text":"XAML <ToolBarPanel DockPanel.Dock= \"Top\" > <ToolBar ToolBarTray.IsLocked= \"True\" Loaded= \"ToolBar_Loaded\" > <Menu ToolBar.OverflowMode= \"Never\" > <!-- Menu items --> </Menu> </ToolBar> </ToolBarPanel> Code behind private void ToolBar_Loaded ( object sender , RoutedEventArgs e ) { ToolBar toolBar = sender as ToolBar ; var overflowGrid = toolBar . Template . FindName ( \"OverflowGrid\" , toolBar ) as FrameworkElement ; if ( overflowGrid != null ) { overflowGrid . Visibility = Visibility . Collapsed ; } var mainPanelBorder = toolBar . Template . FindName ( \"MainPanelBorder\" , toolBar ) as FrameworkElement ; if ( mainPanelBorder != null ) { mainPanelBorder . Margin = new Thickness (); } }","title":"Remove Toolbar Grip and Overflow"},{"location":"software/wpf/#span-all-grid-rows-and-columns","text":"The following code shows how to make a control span all rows and/or columns of its parent grid, even if the number of rows and columns change. <Grid> <!-- Other stuff in the grid --> <ContentControl Grid.RowSpan= \"{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=RowDefinitions.Count, Mode=OneWay}\" Grid.ColumnSpan= \"{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ColumnDefinitions.Count, Mode=OneWay}\" /> </Grid>","title":"Span All Grid Rows and Columns"}]}